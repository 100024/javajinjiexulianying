源代码：

public class Hello {

    public static void main(String[] args) {
        int i = 0 ;
        i = i + 4 ;
        if(i > 3) System.out.println("i的值为 :" + i);

        for(int j = 0;j<10;j++) {
            System.out.println("begin xunhuan,the num is " + j);
        }
    }
}






Classfile /C:/Users/HP/Desktop/Hello.class                                                    //.class文件绝对路径
  Last modified 2021-5-10; size 887 bytes													  //编译时间以及文件大小
  MD5 checksum c4eff0e7c0a0a2cd69c3c45410d7a18f												  //MD5校验码
  Compiled from "Hello.java"							//编译自这个类
public class Week01.HomeWork.Hello   					//类名称
  minor version: 0										//？？？？？？？？
  major version: 49                                     //JDK版本号为1.5
  flags: ACC_PUBLIC, ACC_SUPER							//这个类修饰符是public ,invokespqcial指令会调用super类方法
Constant pool:                                          //常量池
   #1 = Methodref          #12.#29        // java/lang/Object."<init>":()V          1号常量，指向一个方法，类指向#12，方法指向#29。表示Object类的初始化。
   #2 = Fieldref           #30.#31        // java/lang/System.out:Ljava/io/PrintStream; 变量引用，表示System.out.println
   #3 = Class              #32            // java/lang/StringBuilder
   #4 = Methodref          #3.#29         // java/lang/StringBuilder."<init>":()V  StringBuilder类执行了返回值为void的init方法
   #5 = String             #33            // i的值为 :          一个UTF-8编码格式的String对象，内容为“i的值为:”
   #6 = Methodref          #3.#34         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder; 
   #7 = Methodref          #3.#35         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #8 = Methodref          #3.#36         // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #9 = Methodref          #37.#38        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #10 = String             #39            // begin xunhuan,the num is
  #11 = Class              #40            // Week01/HomeWork/Hello
  #12 = Class              #41            // java/lang/Object
  #13 = Utf8               <init>
  #14 = Utf8               ()V
  #15 = Utf8               Code
  #16 = Utf8               LineNumberTable
  #17 = Utf8               LocalVariableTable
  #18 = Utf8               this
  #19 = Utf8               LWeek01/HomeWork/Hello;
  #20 = Utf8               main
  #21 = Utf8               ([Ljava/lang/String;)V
  #22 = Utf8               j
  #23 = Utf8               I
  #24 = Utf8               args
  #25 = Utf8               [Ljava/lang/String;
  #26 = Utf8               i
  #27 = Utf8               SourceFile
  #28 = Utf8               Hello.java
  #29 = NameAndType        #13:#14        // "<init>":()V
  #30 = Class              #42            // java/lang/System
  #31 = NameAndType        #43:#44        // out:Ljava/io/PrintStream;
  #32 = Utf8               java/lang/StringBuilder
  #33 = Utf8               i的值为 :
  #34 = NameAndType        #45:#46        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #35 = NameAndType        #45:#47        // append:(I)Ljava/lang/StringBuilder;
  #36 = NameAndType        #48:#49        // toString:()Ljava/lang/String;
  #37 = Class              #50            // java/io/PrintStream
  #38 = NameAndType        #51:#52        // println:(Ljava/lang/String;)V
  #39 = Utf8               begin xunhuan,the num is
  #40 = Utf8               Week01/HomeWork/Hello
  #41 = Utf8               java/lang/Object
  #42 = Utf8               java/lang/System
  #43 = Utf8               out
  #44 = Utf8               Ljava/io/PrintStream;
  #45 = Utf8               append
  #46 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #47 = Utf8               (I)Ljava/lang/StringBuilder;
  #48 = Utf8               toString
  #49 = Utf8               ()Ljava/lang/String;
  #50 = Utf8               java/io/PrintStream
  #51 = Utf8               println
  #52 = Utf8               (Ljava/lang/String;)V
{
  public Week01.HomeWork.Hello();             //类的无参构造方法
    descriptor: ()V							  //返回值为空
    flags: ACC_PUBLIC						  public修饰
    Code:
      stack=1, locals=1, args_size=1          //栈1，槽位1，形参个数1（this被分配到局部变量表0号槽位）
         0: aload_0							  //将this push进栈
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V 执行Object类初始化方法，返回为空
         4: return                            // 返回
      LineNumberTable:
        line 3: 0
      LocalVariableTable:						/*局部变量表
        Start  Length  Slot  Name   Signature
            0       5     0  this   LWeek01/HomeWork/Hello; 从0开始，长度5，名称为this,是Hello类的引用*/

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V         //形参是String类型数组，方法返回值是Void
    flags: ACC_PUBLIC, ACC_STATIC              //方法访问标识符是public和static
    Code:
      stack=3, locals=3, args_size=1           //stack:栈深度, locals：需要在局部变量保留的槽位数, args_size:参数个数
         0: iconst_0                           //int类型，值为0存入栈 
         1: istore_1                           //栈中int类型值存在局部变量表位置1
         2: iload_1                           //从局部变量表读取位置1的int类型变量
         3: iconst_4                          //将ing类型4加载进栈
         4: iadd							//对栈执行add操作，类型为int
         5: istore_1                           //将栈中int类型的值储存进localcariablestable槽位1
         6: iload_1                           //读取槽位1 int类型的值进栈
         7: iconst_3							//int类型值为3进栈
         8: if_icmple     36 					//如果判断成立
        11: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;执行system.out.println打印操作
        14: new           #3                  // class java/lang/StringBuilder，创建StringBuilder对象。
        17: dup								  //复制栈顶引用值
        18: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V，执行stringbuilder对象初始化
        21: ldc           #5                  // String i的值为 : 载常数：string i的值为：
        23: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;append进stringbuilder
        26: iload_1								//装载槽位1的int类型值进栈
        27: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;将int类型数值转换为String类型并append进stringbuilder
        30: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String；将StringBuilder对象执行tostring操作。
        33: invokevirtual #9                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V，使用PrintStream类的println方法打印toString后的字符串。
        36: iconst_0							//int类型0进栈
        37: istore_2						//存在局部变量表第二个槽位
        38: iload_2								//读取局部变量表第二个槽位值进栈				
        39: bipush        10					//将10压入栈
        41: if_icmpge     75					//栈顶弹出2个值并进行比较，如果第二个大于等于第一个，跳转到偏移位75
        44: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;执行system.out.println方法
        47: new           #3                  // class java/lang/StringBuilder；创建StringBuilder对象。
        50: dup									//复制栈顶的值
        51: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V 初始化stringbuilder对象
        54: ldc           #10                 // String begin xunhuan,the num is
        56: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;调用stringbuilder实例方法append 字符串
        59: iload_2								//加载槽位2的int类型的值
        60: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;调用stringbuilder实例方法append 字符串
        63: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;执行tostring方法
        66: invokevirtual #9                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V；打印
        69: iinc          2, 1					//对槽2的值进行自增1操作
        72: goto          38                    //跳到循环开始的地方
        75: return                              //返回
      LineNumberTable:
        line 6: 0
        line 7: 2
        line 8: 6
        line 10: 36
        line 11: 44
        line 10: 69
        line 13: 75
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           38      37     2     j   I
            0      76     0  args   [Ljava/lang/String;
            2      74     1     i   I
}
SourceFile: "Hello.java"
